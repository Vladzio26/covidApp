{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","img/image.png","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","img","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.329d26c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2QLCA\",\"card\":\"Cards_card__33TVW\",\"infected\":\"Cards_infected__fCIua\",\"recovered\":\"Cards_recovered__3jFBE\",\"deaths\":\"Cards_deaths__69hbW\"};","import React from \"react\";\r\nimport {Card, CardContent, Typography, Grid} from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\"\r\nimport styles from \"./Cards.module.css\";\r\nimport cx from \"classnames\";\r\n\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) =>{\r\nif(!confirmed){\r\n    return \"Loading...\";\r\n}\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value} duration={1.8} separator=\",\" /></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={1.8} separator=\",\" /></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries  from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={1.8} separator=\",\" /></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths cause by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from \"axios\";\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData   = async(country)=>{\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try{\r\n        const {data : {confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n        \r\n        const modifiedData = {confirmed,recovered,deaths,lastUpdate}\r\n        return modifiedData;\r\n    }catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async()=>{\r\n    try{\r\n        const {data}= await axios.get(`${url}/daily`);\r\n\r\n       const modifiedData = data.map((dailyData) =>({\r\n           confirmed: dailyData.confirmed.total,\r\n           deaths: dailyData.deaths.total,\r\n           date: dailyData.reportDate,\r\n       }))\r\n       return modifiedData;\r\n    } catch(error){\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const fetchCountries = async () =>{\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`)\r\n \r\n        return countries.map((countries)=> countries.name)\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {fetchDailyData} from \"../../api\";\r\nimport {Line, Bar} from \"react-chartjs-2\";\r\n\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({data:{confirmed, deaths, recovered}, country}) =>{\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n\r\n    useEffect(() =>{\r\n        const fetchAPI= async()=>{\r\n            setDailyData( await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart =(\r\n        dailyData.length\r\n        ? <Line \r\n            data={{\r\n            labels: dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data: dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n            },{\r\n                data: dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n\r\n                fill:true,\r\n            }],\r\n        }}/> : null\r\n    );\r\n\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ?(\r\n            <Bar \r\n            data={{\r\n                 labels:['Infected','Recovered','Deaths'],\r\n                 datasets:[{\r\n                     label: 'People',\r\n                     backgroundColor: ['rgba(0, 0, 225, 0.7)',\r\n                        'rgba(0, 225,0, 0.7)',\r\n                        'rgba(255, 0, 0, 0.7)'],\r\n                        data:[confirmed.value, recovered.value, deaths.value]\r\n                 }]\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{ display: true, text:`Current state in ${country}`}\r\n            }}\r\n            />\r\n        ):null\r\n    )\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect}  from \"react\";\r\nimport {NativeSelect, FormControl} from \"@material-ui/core\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries } from \"../../api\"\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) =>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i)=><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from \"react\";\r\nimport Cards from \"./components/Cards/Cards.jsx\";\r\nimport Chart from \"./components/Chart/Chart.jsx\";\r\nimport CountryPicker from \"./components/CountryPicker/CountryPicker.jsx\";\r\n\r\nimport img from \"./img/image.png\"\r\nimport styles from \"./App.module.css\";\r\nimport {fetchData} from './api';\r\n\r\nclass App extends React.Component{\r\n    state={\r\n        data:{},\r\n        country:'',\r\n    }\r\n\r\n async componentDidMount(){\r\n    const fetchedData = await fetchData();\r\n    \r\n    this.setState({data:fetchedData})\r\n}\r\n\r\n    handleCountryChange = async (country)=>{\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData, country: country})\r\n    }  \r\n\r\n\r\n    render(){\r\n        const {data, country} =this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <img src={img}/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App; ","import React from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__-8lrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__22Cn5\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2GTIn\"};"],"sourceRoot":""}